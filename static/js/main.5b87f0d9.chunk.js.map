{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyPressed","event","key","setState","document","addEventListener","this","className","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"oNAqCaA,EAAb,4MACEC,MAAe,CACbC,WAAY,MAFhB,EASEC,iBAAmB,SAACC,GACdA,EAAMC,MAAQ,EAAKJ,MAAMC,YAC3B,EAAKI,SAAS,CAAEJ,WAAYE,EAAMC,OAXxC,uDAKE,WACEE,SAASC,iBAAiB,QAASC,KAAKN,oBAN5C,oBAeE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGR,EAAU,mCACqBA,EADrB,KAEP,kCAvBd,GAAyBS,IAAMC,e,MChC/BC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.5b87f0d9.chunk.js","sourcesContent":["// functional aproach solution\n\nimport React from 'react';\n\n// import React, { useCallback, useEffect, useState } from 'react';\n\n// export const App: React.FC = () => {\n//   const [pressedKey, setPressedKey] = useState<string | null>(null);\n//   const handleKeyPressed = useCallback((event: KeyboardEvent) => {\n//     if (event.key !== pressedKey) {\n//       setPressedKey(event.key);\n//     }\n//   }, [pressedKey]);\n\n//   useEffect(() => {\n//     document.addEventListener('keyup', handleKeyPressed);\n\n//     return () => {\n//       document.removeEventListener('keyup', handleKeyPressed);\n//     };\n//   }, [handleKeyPressed]);\n\n//   return (\n//     <div className=\"App\">\n//       <p className=\"App__message\">\n//         {pressedKey\n//           ? `The last pressed key is [${pressedKey}]`\n//           : 'Nothing was pressed yet'}\n//       </p>\n//     </div>\n//   );\n// };\n\ntype State = {\n  pressedKey: string | null\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state: State = {\n    pressedKey: null,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyPressed);\n  }\n\n  handleKeyPressed = (event: KeyboardEvent) => {\n    if (event.key !== this.state.pressedKey) {\n      this.setState({ pressedKey: event.key });\n    }\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}